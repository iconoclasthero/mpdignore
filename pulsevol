#!/bin/bash

scriptname=$(realpath "$0")

function editscript(){
  local script path; script="${scriptname##*/}"; path="${scriptname%/*}"; swp="$path/.$script.swp"
  if [[ ! -e "$swp" ]]; then 
    printf "\n\n%s\n\n" "$swp"; 
    (/usr/bin/nano "$scriptname"); exit
  else 
    printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptname" "$swp"; exit
  fi
}

function pause(){ read -p "$*" ; }


#pactl load-module module-native-protocol-tcp auth-ip-acl="127.0.0.1;192.168.0.0/16" auth-anonymous=1

checktcpmodule(){
  checktcp="$(ssh "$ip" pactl list short modules|grep module-native-protocol-tcp)"
  checktcperr="$?"
  (( checktcperr != 0 )) && unloadmodule="$(ssh "$ip" pactl unload-module module-native-protocol-tcp 2>&1 )"
  (( checktcperr != 0 )) && loadmodule="$(ssh "$ip" pactl load-module module-native-protocol-tcp auth-ip-acl='127.0.0.1\;192.168.0.0/16' auth-anonymous=1)" && loadmoderr="$?"
  (( checktcperr = 0 )) && loadmodule="$checktcp"
#  echo "$checktcp $checktcperr"
  echo "${loadmodule:+Module loaded: $loadmodule} ${loadmoderr:+stderr: $loadmoderr}"
}

if [[ "$1" == "edit" ]] || [[ "$1" == "e" ]] || [[ "$1" == "nano" ]]; then
  editscript "$1"
elif [[ "$1" == "help" ]] || [[ "$1" == "-h" ]]; then
  printf "Call `%s (e|edit|nano)` to edit the script.\n" "$0"
  exit 0
fi

ip="127.0.0.1"
sink=""

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --compaq) ip="192.168.12.22"; shift ;;
    --gig|--gigabyte) ip="192.168.1.2"; shift ;;
    --mute|mute) cmd="--toggle-mute"; shift ;;
    --sink) sink="$2"; shift 2 ;;
    --mixer) cmd='mixer'; shift ;;
    *)
      if [[ "$1" =~ ^(-|\+)?[0-9]{1,3}$ ]]; then
        if [[ "$1" =~ ^[0-9]+$ ]]; then
          cmd="--set-volume $1"  # Unsigned sets volume
        else
          cmd="--change-volume=$1"  # Signed changes volume
        fi
      else
        echo "Unknown parameter passed: $1"
        exit 1
      fi
      shift
      ;;
  esac
done

checktcpmodule

if [[ -z "$sink" ]]; then
  sink="$(pulsemixer --server="$ip" --list-sinks | grep JBL | awk '{print $3}')"
  sink="${sink%,}"
fi

if [[ "$cmd" = 'mixer' ]]; then
  pulsemixer "--server=$ip"
elif [[ -n "$cmd" ]]; then
  pulsemixer "--server=$ip" "--id=$sink" "$cmd"
# args=( "--server=$ip" "--id=$sink" "$cmd" )
# pulsemixer "${args[@]}"
# cmd2="pulsemixer --server=$ip --id=$sink $cmd"
# $cmd2
else
  echo "Usage: $0 --compaq|--gig|--mute|<volume_change>"
  exit 1
fi
