#!/bin/bash

defaultpulse=127.0.0.1           # defaultpulse should be defined in the
. ~/.config/mpd-local.conf       # mpd-local.conf file so it will be overridden there...
# default-127.0.0.1              # unless redefined below.

gigabyte=192.168.1.2
optiplex=192.168.12.222
compaq=192.168.12.22

scriptname=$(realpath "$0")
. /usr/local/bin/editscript


#pactl load-module module-native-protocol-tcp auth-ip-acl="127.0.0.1;192.168.0.0/16" auth-anonymous=1

checktcpmodule(){
  checktcp="$(ssh "$ip" pactl list short modules|grep module-native-protocol-tcp)"
  checktcperr="$?"
  (( checktcperr != 0 )) && unloadmodule="$(ssh "$ip" pactl unload-module module-native-protocol-tcp 2>&1 )"
  (( checktcperr != 0 )) && loadmodule="$(ssh "$ip" pactl load-module module-native-protocol-tcp auth-ip-acl='127.0.0.1\;192.168.0.0/16' auth-anonymous=1)" && loadmoderr="$?"
  (( checktcperr = 0 )) && loadmodule="$checktcp"
#  echo "$checktcp $checktcperr"
  echo "${loadmodule:+Module loaded: $loadmodule} ${loadmoderr:+stderr: $loadmoderr}"
}

#if [[ "$1" == "edit" ]] || [[ "$1" == "e" ]] || [[ "$1" == "nano" ]]; then
#  editscript "$1"
#elif [[ "$1" == "help" ]] || [[ "$1" == "-h" ]]; then
#  printf "Call `%s (e|edit|nano)` to edit the script.\n" "$0"
#  exit 0
#fi

sink=""

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --compaq) ip="$compaq"; shift ;;
    --optiplex|--opti) ip="$optiplex"; shift;;
    --gig|--gigabyte) ip="$gigabyte"; shift ;;
    --mute|mute) cmd="--toggle-mute"; shift ;;
    --sink) sink="$2"; shift 2 ;;
    --mixer) cmd='mixer'; shift ;;
    *)
      if [[ "$1" =~ ^(-|\+)?[0-9]{1,3}$ ]]; then
        if [[ "$1" =~ ^[0-9]+$ ]]; then
          cmd="--set-volume=$1"  # Unsigned sets volume
        else
          cmd="--change-volume=$1"  # Signed changes volume
        fi
      else
        echo "Unknown parameter passed: $1"
        exit 1
      fi
      shift
      ;;
  esac
done

[[ ! "$ip" ]] && ip="$defaultpulse"

#checktcpmodule

if [[ -z "$sink" ]]; then
  sink="$(pulsemixer --server="$ip" --list-sinks | grep JBL | awk '{print $3}')"
  sink="${sink%,}"
fi

if [[ "$cmd" = 'mixer' ]]; then
  pulsemixer "--server=$ip"
elif [[ -n "$cmd" ]]; then
  pulsemixer "--server=$ip" "--id=$sink" "$cmd"
# args=( "--server=$ip" "--id=$sink" "$cmd" )
# pulsemixer "${args[@]}"
# cmd2="pulsemixer --server=$ip --id=$sink $cmd"
# $cmd2
else
  printf '\nNo volume command provided.\n\nUsage: %s --compaq|--gig|--mute|<volume_change>\n\n' "$0"
  printf 'Current sink status:\n'

  pulsemixer --server="$ip" --id="$sink" --get-volume | awk '{print "Volume:", $2 "%"}'
  pulsemixer --server="$ip" --id="$sink" --get-mute | awk '{print "Muted:", ($2 == 1 ? "yes" : "no")}'

#  printf '\nAvailable sinks:\n'
#  pulsemixer --server="$ip" --list-sinks | awk '{print "- ID:", $3, "| Name:", $4}' | sed 's/,$//'

(( db )) &&  pause "$ip"
  printf '\nAvailable sinks:\n'
  pulsemixer --server="$ip" --list-sinks |
    grep '^Sink:' |
    sed -E 's/^Sink:[[:space:]]+ID: ([^,]+), Name: ([^,]+),.*/- ID: \1 | Name: \2/'

  printf \\n\\n

  exit 0
fi
