#!/bin/bash
# nb: the swp file that editscript relies on is provided by nano

   bold="$(tput bold)"
  tput0="$(tput sgr0)"
  white="$(tput setaf 7)"
    red="$(tput setaf 9)"
brwhite="$(tput setaf 15)"
skcolor="$(tput setaf 1)"
crcolor="$(tput setaf 27)"
qucolor="$(tput setaf 3)"
 

 xdgconfigset="$( . "$XDG_CONFIG_HOME/mpd-local.conf" 2>&1 >/dev/null )" || . "/home/$USER/.config/mpd-local.conf"
 [[ "$xdgconfigset" = "* /mpd-local.conf: No such file or directory" ]] &&
    printf '%s[%sWARN%s] %s%S%s: check the definition of "\$XDG_CONFIG_HOME"'
         "$bold" \
         "$red" \
         "$brwhite" \
         "$(date -Im)" \
         "$tput0" \
         "$white"


 . mpdignore.functions


#echo "next called $(date -Im)" >>/cache/next.log

editscript(){
  local scriptpath script path swp; scriptpath=$(realpath "$0" 2>/dev/null); script="${scriptpath##*/}"; path="${scriptpath%/*}"; swp="$path/.$script.swp"
     [[ ! -e "$swp" ]] && printf "\n\n%s\n\n" "$swp" && (/usr/bin/nano "$scriptpath") && exit
     printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptpath" "$swp"; exit ;}

pause(){ read -rp "$*" < /dev/tty; }

skip(){
  logsong "skipped"
  mpcp next
}

 [[ "$1" == @(edit|e|-e) ]] && editscript

# mpctitleout="$(/usr/local/bin/mpctitle "$@" &)"

 get-current-json

 printf '\n%s-------- ------------- SKIPPED -----------   %s' "${white}" "${tput0}"
 title skipped

 if pgrep -x "notify-osd" > /dev/null; then
   notify-send -i audio-x-generic "Song Skipped!" "${skipped[1]}"
 fi

#notify-send -i audio-x-generic "Next song:" "$queued by $qartist"

 logsong "skipped" &
# mpcp -q next
 /usr/local/bin/mpctitle "$@"
# printf %s\\n "$mpctitleout"
