#!/bin/bash
# nb: the swp file that editscript relies on is provided by nano

echo "next called $(date -Im)" >>/cache/next.log

editscript(){
  local scriptpath script path swp; scriptpath=$(realpath "$0" 2>/dev/null); script="${scriptpath##*/}"; path="${scriptpath%/*}"; swp="$path/.$script.swp"
     [[ ! -e "$swp" ]] && printf "\n\n%s\n\n" "$swp" && (/usr/bin/nano "$scriptpath") && exit
     printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptpath" "$swp"; exit ;}

pause(){ read -rp "$*" < /dev/tty; }

[[ "$1" == @(edit|e|-e) ]] && editscript

    . mpdignore.functions
    bold="$(tput bold)";
    tput0="$(tput sgr0)";
    skcolor="$(tput setaf 1)";
    crcolor="$(tput setaf 27)";
    qucolor="$(tput setaf 3)";
#  readarray -t skipped < <( mpcp current -f "%file%\n%title% on %album% by %artist%")
# printf '%sSkipping:%s %s%s%s\n\n' "${bold}" "${tput0}" "${skcolor}" "${skipped[0]%.*}" "${tput0}"
    printf '\n%s------   ------------ SKIPPED -----------   %s' "${white}" "${tput0}";
    get-current-json
    title skipped
    if pgrep -x "notify-osd" > /dev/null; then
        notify-send -i audio-x-generic "Song Skipped!" "${skipped[1]}"
    fi

  # notify-send -i audio-x-generic "Next song:" "$queued by $qartist"
    skip &>/dev/null
##   readarray -t current < <(mpcp current -f "%file%\n%title% on %album% by %artist%")
#    qfile="$(mpcp queued -f %file%)"
##   printf '%sCurrent:%s %s%s\n\n%s%sUp next: %s%s%s %s\n\n' "${bold}" "${tput0}" "${crcolor}" "${current[0]%.*}" "${tput0}" "${bold}" "${tput0}" "${qucolor}" "${qfile%.*}" "${tput0}"
#    printf '\n%s------   ------------ QUEUED ------------   %s' "${white}" "${tput0}";
#    title queued;
#    get-current-json;
#    printf '\n%s------   ------------ CURRENT -----------   %s' "${bold}" "${tput0}";
#    title current;
#    printf \\n;
#    printf %s%s%s\ -\ %s%s%s\\n "$bold""$c_aa_cur" "$artist" "$c_title_cur" "$title" "$tput0";
#    \mpc status "\[%state%\] ##%songpos%/%length%  %currenttime%/%totaltime% (%percenttime%)\nvolume:%volume%   repeat: %repeat%   random: %random%   single: %single%   consume: %consume%\n";
#    \mpc -q --host "$mpdpass@$mpdhost" "$@"

/usr/local/bin/mpctitle "$@"

