#!/bin/bash

editscript(){
  local scriptpath script path swp; scriptpath=$(realpath "$0" 2>/dev/null); script="${scriptpath##*/}"; path="${scriptpath%/*}"; swp="$path/.$script.swp"
     [[ ! -e "$swp" ]] && printf "\n\n%s\n\n" "$swp" && (/usr/bin/nano "$scriptpath") && exit
     printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptpath" "$swp"; exit ;}

[[ "$1" == @(edit|e|-e) ]] && editscript

. mpdignore.functions

#   bold="$(tput bold)"
#  tput0="$(tput sgr0)"
#  white="$(tput setaf 7)"
#    red="$(tput setaf 1)"
brwhite="$(tput setaf 15)"
skcolor="$(tput setaf 1)"
crcolor="$(tput setaf 27)"
qucolor="$(tput setaf 3)"

xdgconfigset="$( . "$XDG_CONFIG_HOME/mpd-local.conf" 2>&1 >/dev/null )" || . "/home/$USER/.config/mpd-local.conf"
[[ "$xdgconfigset" =~ .+\ \/mpd-local.conf\:\ No\ such\ file\ or\ directory ]] &&
  printf '\n%s[%sWARN%s] %s%s%s: check the definition of "$XDG_CONFIG_HOME"\n' \
    "$bold" \
    "$red" \
    "$brwhite" \
    "$(date -Im)" \
    "$tput0" \
    "$white"

pause(){ read -rp "$*" < /dev/tty; }

skip(){
  logsong "skipped"
  mpcp next
}

# mpctitleout="$(/usr/local/bin/mpctitle "$@" &)"
logsong "skipped"&

#get-current-json
source <(/home/bvargo/bin/gits/mpdignore/status11.py)

hr2 "SKIPPED"
title skipped

#if pgrep -x "notify-osd" > /dev/null; then
  notify-send -i audio-x-generic "Song Skipped!" "${skipped[1]}"
#fi

#notify-send -i audio-x-generic "Next song:" "$queued by $qartist"

mpcp -q next &
/usr/local/bin/mpctitle "$@"
#/home/bvargo/bin/gits/mpdignore/mpctitle-2 "$@"
